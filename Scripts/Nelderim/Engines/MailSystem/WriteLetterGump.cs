/* 
	WriteLetterGump.cs - Version 2.0
	Script generated by Gump Creator 2.01
	
	Mail System - Version 1.0
	
	Newly Modified On 15/11/2016 
	
	By Veldian 
	Dragon's Legacy Uo Shard 
*/

using Server.Targeting;
using System;
using Server;
using Server.Gumps;
using Server.Items;
using Server.Network;

namespace Server.Gumps
{
    public class WriteLetterGump : Gump
    {
        private Mobile m_Owner;
        private Mobile m_From;
        public Mobile Owner { get { return m_Owner; } set { m_Owner = value; } }

        public WriteLetterGump(Mobile owner, Mobile from)
            : base(25, 25)
        {
            m_From = from;
            owner.CloseGump(typeof(WriteLetterGump));

            int gumpX = 0; int gumpY = 0; bool initialState = false;

            m_Owner = owner;

            Closable = true;
            Disposable = true;
            Dragable = true;
            Resizable = true;

            AddPage(1);

            gumpX = 0; gumpY = 0;
            AddImage(gumpX, gumpY, 0x820);

            gumpX = 17; gumpY = 37;
            AddImage(gumpX, gumpY, 0x821);

            gumpX = 17; gumpY = 107;
            AddImage(gumpX, gumpY, 0x822);

            gumpX = 17; gumpY = 177;
            AddImage(gumpX, gumpY, 0x822);

            gumpX = 18; gumpY = 237;
            AddImage(gumpX, gumpY, 0x823);

            gumpX = 30; gumpY = 37;
            AddTextEntry(gumpX, gumpY, 237, 137, 0, 1, "");

            gumpX = 245; gumpY = 245;
            AddButton(gumpX, gumpY, 0xFBF, 0xFBE, 1, GumpButtonType.Reply, 0);

            gumpX = 185; gumpY = 245;
            AddLabel(gumpX, gumpY, 0, "Wyslij");

            gumpX = 39; gumpY = 245;
            AddButton(gumpX, gumpY, 0xFAD, 0xFAE, 2, GumpButtonType.Reply, 0);

            gumpX = 67; gumpY = 245;
            AddLabel(gumpX, gumpY, 0, "Zalacznik");
        }

        public override void OnResponse(NetState state, RelayInfo info)
        {
            Mobile from = state.Mobile;

            switch (info.ButtonID)
            {
                case 1: PlayerLetter letter = new PlayerLetter();
                    TextRelay text = info.GetTextEntry(1);
                    string un = (text == null ? null : text.Text.Trim());
                    letter.BodyText = un;
                    letter.m_From = m_Owner;
                    letter.m_To = m_From;
                    letter.m_Time = DateTime.Now;
                    m_Owner.AddToBackpack(letter);
                    from.CloseGump(typeof(WriteLetterGump));
                    break;
                case 2: from.Target = new ParcelTarget(m_Owner, m_From);
                    break;
            }
        }



        private class ParcelTarget : Target
        {

            private Mobile m_From;
            private Mobile m_To;

            public ParcelTarget(Mobile from, Mobile to)
                : base(10, false, TargetFlags.None)
            {

                m_From = from;
                m_To = to;
            }

            protected override void OnTarget(Mobile from, object target)
            {

                if (target == from)
                    from.SendMessage("Your attempts to gift-wrap yourself are met with failure.");
                else if (target is Mobile)
                    from.SendMessage("That being refuses to be gift wrapped, and looks quite put out.");
                else if (target is Item)
                {
                    Item c = (Item)target;
                    if (c.IsChildOf(from.Backpack))
                    {
                        from.SendMessage("You gift-wrap the item.");
                        Parcel box = new Parcel();
                        box.To = m_To;
                        box.From = m_From;
                        box.AddItem(c);
                        from.AddToBackpack(box);
                    }
                }
            }
        }
    }
}
