
//////////////////////////////////////////////////////////////////////
// Automatically generated by Bradley's GumpStudio and roadmaster's 
// RunUo_Exporter.dll,  Special thanks goes to Daegon whose work the 
// exporter was based off of, and Shadow wolf for his Template Idea.
//////////////////////////////////////////////////////////////////////
#define RunUo2_0

using System;
using Server;
using Server.Gumps;
using Server.Network;
using Server.Commands;

namespace Server.Gumps
{
    public class ResetGump : Gump
    {
        public enum Action
        {
            Skill,
            Stat
        }

        Mobile caller;
        Action action;

        public ResetGump( Mobile from, Action action )
            : base( 0, 0 )
        {
            caller = from;
            this.action = action;


            this.Closable=true;
            this.Disposable=true;
            this.Dragable=true;
            AddPage( 0 );
            AddBackground( 0, 0, 380, 160, 9200 );
            string text = string.Format( @"Czy na pewno chcesz wyzerowac swoje {0}?", (action == Action.Skill ? "umiejetnosci" : "statystyki") );
            AddLabel( 15, 84, 0, text );
            AddButton( 120, 120, 247, 248, (int) Buttons.Okay, GumpButtonType.Reply, 0 );
            AddButton( 200, 120, 241, 242, (int) Buttons.Cancel, GumpButtonType.Reply, 0 );
            AddImage( 155, 10, 106 );
        }

        public enum Buttons
        {
            Okay,
            Cancel,
        }


        public override void OnResponse( NetState sender, RelayInfo info )
        {
            Mobile from = sender.Mobile;



            switch ( info.ButtonID )
            {
                case (int) Buttons.Okay:
                    {
                        if ( action == Action.Skill )
                        {
                            for ( int i = 0; i < this.caller.Skills.Length; i++ )
                            {
                                this.caller.Skills[ i ].Base = 0;
                            }
                        }
                        else if ( action == Action.Stat )
                        {
                            this.caller.RawStr = 10;
                            this.caller.RawDex = 10;
                            this.caller.RawInt = 10;
                        }
                        break;
                    }
                case (int) Buttons.Cancel:
                    {

                        break;
                    }

            }
        }
    }
}